{"version":3,"sources":["TravelOptions.js","ChecklistItems.js","App.js","index.js"],"names":["TravelOptions","_this","this","travelOptions","props","questionData","map","qd","options","questionDatum","answerDatum","onUpdateNumber","type","react_default","a","createElement","className","value","onChange","e","title","target","opt","id","key","htmlFor","getTravelOptionsInput","answerData","Component","ChecklistItems","checklistItems","alwaysItems","find","item","nightsGone","includes","replace","Math","max","floor","concat","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","require","answerDataNumberFields","filter","state","forEach","nf","handleUpdateNumber","bind","assertThisInitialized","fieldName","number","setState","oldState","assign","defineProperty","TravelOptions_TravelOptions","src_ChecklistItems","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.904b9d56.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nfunction getTravelOptionsInput(questionDatum, answerDatum, onUpdateNumber) {\r\n  switch (questionDatum.type) {\r\n    case \"number\":\r\n      return (\r\n        <input\r\n          className=\"travel-options\"\r\n          type=\"number\"\r\n          value={answerDatum}\r\n          onChange={e => onUpdateNumber(questionDatum.title, e.target.value)}\r\n        />\r\n      );\r\n    case \"single-option\": {\r\n      const options = questionDatum.options.map(opt => (\r\n        <option id={opt.title} key={opt.title}>\r\n          {opt.title}\r\n        </option>\r\n      ));\r\n      return <select className=\"travel-options\">{options}</select>;\r\n    }\r\n    case \"multi-option\": {\r\n      const options = questionDatum.options.map(opt => (\r\n        <div key={opt.title}>\r\n          <input type=\"checkbox\" id={opt.title} />\r\n          <label htmlFor={opt.title}>{opt.title}</label>\r\n        </div>\r\n      ));\r\n      return <span className=\"travel-options\">{options}</span>;\r\n    }\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default class TravelOptions extends Component {\r\n  render() {\r\n    const travelOptions = this.props.questionData.map(qd => {\r\n      const matchingAnswerDatum = this.props.answerData[qd.title];\r\n      const options = getTravelOptionsInput(qd, matchingAnswerDatum, this.props.onUpdateNumber);\r\n\r\n      return (\r\n        <div key={qd.title || qd.type}>\r\n          <h5>{qd.title}</h5>\r\n          {options}\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"data-container\">\r\n        <h3>Travel Options</h3>\r\n        {travelOptions}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass ChecklistItems extends Component {\r\n  render() {\r\n    let checklistItems = [];\r\n    const alwaysItems = this.props.questionData\r\n      .find(qd => qd.type === \"always\")\r\n      .checklistItems.map(item => {\r\n        const nightsGone = this.props.answerData[\"How many nights are you gone?\"];\r\n\r\n        if(!nightsGone && item.includes(\"nights\")) return null;\r\n\r\n        item = item\r\n          .replace(\r\n            \"{nights}\",\r\n            Math.max(1, nightsGone)\r\n          )\r\n          .replace(\r\n            \"{reusable-clothes-nights}\",\r\n            Math.floor(nightsGone / 3 + 1)\r\n          );\r\n\r\n        return (\r\n          <div key={item}>\r\n            <input type=\"checkbox\" id={item} />\r\n            <label htmlFor={item}>{item}</label>\r\n          </div>\r\n        );\r\n      });\r\n\r\n    checklistItems = checklistItems.concat(alwaysItems);\r\n    return (\r\n      <div className=\"data-container\">\r\n        <h3>Checklist</h3>\r\n        {checklistItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChecklistItems;\r\n","import React, { Component } from \"react\";\r\nimport TravelOptions from \"./TravelOptions\";\r\nimport ChecklistItems from \"./ChecklistItems\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const questionData = require(\"./data.json\");\r\n    const answerDataNumberFields = questionData.filter(qd => qd.type === \"number\");\r\n\r\n    const state = {\r\n      questionData,\r\n      answerData: {}\r\n    };\r\n\r\n    answerDataNumberFields.forEach(nf => \r\n      state.answerData[nf.title] = 0\r\n    );\r\n\r\n    this.state = state;\r\n\r\n    this.handleUpdateNumber = this.handleUpdateNumber.bind(this);\r\n  }\r\n  handleUpdateNumber(fieldName, number) {\r\n    this.setState((oldState) => ({\r\n      answerData: Object.assign({}, oldState, { [fieldName]: number})\r\n    }));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"app-content\">\r\n          <TravelOptions\r\n            {...this.state}\r\n            onUpdateNumber={this.handleUpdateNumber}\r\n          />\r\n          <ChecklistItems {...this.state} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}