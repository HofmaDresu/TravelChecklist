{"version":3,"sources":["TravelOptions.js","ChecklistItems.js","App.js","index.js"],"names":["TravelOptions","_this","this","travelOptions","props","questionData","map","qd","options","questionDatum","answerDatum","onUpdateNumber","onUpdateSingle","onUpdateMulti","type","react_default","a","createElement","className","value","onChange","e","title","target","opt","id","key","selectedOptions","text","checked","includes","htmlFor","getTravelOptionsInput","answerData","onUpdateSingleOption","onUpdateMultiOption","Component","itemToChecklistItem","item","ChecklistItems","checklistItems","singleOptionItems","filter","flatMap","find","multiOptionItems","alwaysItems","nightsGone","replace","Math","max","floor","concat","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","require","state","forEach","handleUpdateNumber","bind","assertThisInitialized","handleUpdateSingleOption","handleUpdateMultiOption","fieldName","number","setState","oldState","assign","defineProperty","selectionKey","selectedItems","splice","indexOf","push","TravelOptions_TravelOptions","src_ChecklistItems","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b4b6db94.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nfunction getTravelOptionsInput(questionDatum, answerDatum, onUpdateNumber, onUpdateSingle, onUpdateMulti) {\r\n  switch (questionDatum.type) {\r\n    case \"number\":\r\n      return (\r\n        <input\r\n          className=\"travel-options\"\r\n          type=\"number\"\r\n          value={answerDatum}\r\n          onChange={e => onUpdateNumber(questionDatum.title, e.target.value)}\r\n        />\r\n      );\r\n    case \"single-option\": {\r\n      const options = questionDatum.options.map(opt => (\r\n        <option id={opt.title} key={opt.title}>\r\n          {opt.title}\r\n        </option>\r\n      ));\r\n      return (\r\n        <select className=\"travel-options\" value={answerDatum || \"-- Select an option --\"} onChange={e => onUpdateSingle(questionDatum.title, e.target.selectedOptions[0].text)}>\r\n          <option value=\"-- Select an option --\">-- Select an option --</option>\r\n          {options}\r\n        </select>);\r\n    }\r\n    case \"multi-option\": {\r\n      const options = questionDatum.options.map(opt => (\r\n        <div key={opt.title}>\r\n          <input type=\"checkbox\" id={opt.title} checked={(answerDatum || []).includes(opt.title)} onChange={e => onUpdateMulti(questionDatum.title, opt.title)} />\r\n          <label htmlFor={opt.title}>{opt.title}</label>\r\n        </div>\r\n      ));\r\n      return <span className=\"travel-options\">{options}</span>;\r\n    }\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default class TravelOptions extends Component {\r\n  render() {\r\n    const travelOptions = this.props.questionData.map(qd => {\r\n      const matchingAnswerDatum = this.props.answerData[qd.title];\r\n      const options = getTravelOptionsInput(qd, matchingAnswerDatum, this.props.onUpdateNumber, this.props.onUpdateSingleOption, this.props.onUpdateMultiOption);\r\n\r\n      return (\r\n        <div key={qd.title || qd.type}>\r\n          <h5>{qd.title}</h5>\r\n          {options}\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"data-container\">\r\n        <h3>Travel Options</h3>\r\n        {travelOptions}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nfunction itemToChecklistItem(item) {\r\n  return item ? (\r\n    <div key={item}>\r\n      <input type=\"checkbox\" id={item} />\r\n      <label htmlFor={item}>{item}</label>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nclass ChecklistItems extends Component {\r\n  render() {\r\n    let checklistItems = [];\r\n\r\n    const singleOptionItems = this.props.questionData\r\n      .filter(qd => qd.type=== \"single-option\")\r\n      .flatMap(qd => (qd.options.find(opt => opt.title === this.props.answerData[qd.title]) || {}).checklistItems)\r\n      .map(itemToChecklistItem);\r\n\r\n    const multiOptionItems = this.props.questionData\r\n      .filter(qd => qd.type=== \"multi-option\")\r\n      .flatMap(qd => (\r\n        qd.options.filter(opt => (this.props.answerData[qd.title] || []).includes(opt.title)\r\n          ) || {}).flatMap(opt => opt.checklistItems))\r\n      .map(itemToChecklistItem);\r\n\r\n    const alwaysItems = this.props.questionData\r\n      .find(qd => qd.type === \"always\")\r\n      .checklistItems.map(item => {\r\n        const nightsGone = this.props.answerData[\"How many nights are you gone?\"];\r\n\r\n        if(!nightsGone && (item || []).includes(\"nights\")) return null;\r\n\r\n        item = item\r\n          .replace(\r\n            \"{nights}\",\r\n            Math.max(1, nightsGone)\r\n          )\r\n          .replace(\r\n            \"{reusable-clothes-nights}\",\r\n            Math.floor(nightsGone / 3 + 1)\r\n          );\r\n\r\n        return itemToChecklistItem(item);\r\n      });\r\n\r\n    checklistItems = checklistItems.concat(singleOptionItems).concat(multiOptionItems).concat(alwaysItems).filter(item => item);\r\n    return (\r\n      <div className=\"data-container\">\r\n        <h3>Checklist</h3>\r\n        {checklistItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChecklistItems;\r\n","import React, { Component } from \"react\";\r\nimport TravelOptions from \"./TravelOptions\";\r\nimport ChecklistItems from \"./ChecklistItems\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const questionData = require(\"./data.json\");\r\n\r\n    const state = {\r\n      questionData,\r\n      answerData: {}\r\n    };\r\n\r\n    questionData.forEach(qd => {\r\n      switch(qd.type) {\r\n        case \"number\":\r\n          state.answerData[qd.title] = 0;\r\n          break;\r\n        case \"single-option\":\r\n          state.answerData[qd.title] = '-- Select an option --';\r\n          break;\r\n        case \"multi-option\":\r\n          state.answerData[qd.title] = [];\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    this.state = state;\r\n\r\n    this.handleUpdateNumber = this.handleUpdateNumber.bind(this);\r\n    this.handleUpdateSingleOption = this.handleUpdateSingleOption.bind(this);\r\n    this.handleUpdateMultiOption = this.handleUpdateMultiOption.bind(this);\r\n  }\r\n  handleUpdateNumber(fieldName, number) {\r\n    this.setState((oldState) => ({\r\n      answerData: Object.assign({}, oldState.answerData, { [fieldName]: number})\r\n    }));\r\n  }\r\n  handleUpdateSingleOption(fieldName, selectionKey) {\r\n    this.setState((oldState) => ({\r\n      answerData: Object.assign({}, oldState.answerData, { [fieldName]: selectionKey})\r\n    }));\r\n  }\r\n  handleUpdateMultiOption(fieldName, key) {\r\n    this.setState((oldState) => {\r\n      const selectedItems = oldState.answerData[fieldName] || [];\r\n\r\n      if(selectedItems.includes(key)) {\r\n        selectedItems.splice(selectedItems.indexOf(key), 1)\r\n      } else {\r\n        selectedItems.push(key);\r\n      }\r\n      \r\n      return {\r\n        answerData: Object.assign({}, oldState.answerData, { [fieldName]: selectedItems})\r\n      };\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"app-content\">\r\n          <TravelOptions\r\n            {...this.state}\r\n            onUpdateNumber={this.handleUpdateNumber}\r\n            onUpdateSingleOption={this.handleUpdateSingleOption}\r\n            onUpdateMultiOption={this.handleUpdateMultiOption}\r\n          />\r\n          <ChecklistItems {...this.state} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}